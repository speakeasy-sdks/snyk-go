// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionIntegrationIDEnum string

const (
	ConnectionIntegrationIDEnumSalesforce ConnectionIntegrationIDEnum = "salesforce"
	ConnectionIntegrationIDEnumHubspot    ConnectionIntegrationIDEnum = "hubspot"
	ConnectionIntegrationIDEnumPipedrive  ConnectionIntegrationIDEnum = "pipedrive"
)

func (e *ConnectionIntegrationIDEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "salesforce":
		fallthrough
	case "hubspot":
		fallthrough
	case "pipedrive":
		*e = ConnectionIntegrationIDEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionIntegrationIDEnum: %s", s)
	}
}

type ConnectionStatusEnum string

const (
	ConnectionStatusEnumNewConnection ConnectionStatusEnum = "NEW_CONNECTION"
	ConnectionStatusEnumInitialSync   ConnectionStatusEnum = "INITIAL_SYNC"
	ConnectionStatusEnumReady         ConnectionStatusEnum = "READY"
)

func (e *ConnectionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NEW_CONNECTION":
		fallthrough
	case "INITIAL_SYNC":
		fallthrough
	case "READY":
		*e = ConnectionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionStatusEnum: %s", s)
	}
}

type Connection struct {
	ConnectionID  *string                      `json:"connectionId,omitempty"`
	CreatedTime   *string                      `json:"createdTime,omitempty"`
	IntegrationID *ConnectionIntegrationIDEnum `json:"integrationId,omitempty"`
	NativeOrgURL  *string                      `json:"nativeOrgURL,omitempty"`
	Status        *ConnectionStatusEnum        `json:"status,omitempty"`
}
