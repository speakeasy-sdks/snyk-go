// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type EventAttendeeAssociations struct {
	// The id of the associated object, if this Attendee is not associated with a CRM object, this id is null and the `email` field will be present
	AssociationID string `json:"associationId"`
	EventID       string `json:"eventId"`
}

// EventAttendee - Event Attendees hold information about someone who attendeed or was invited to an event. Attendees are always associated with some Event and another person object such as a Contact, Lead, or Other.
type EventAttendee struct {
	// Returned when `allFields` is set in the query params. Includes all data, untransformed, we recieved from the downstream CRM
	Additional map[string]interface{} `json:"additional,omitempty"`
	// The object type of the associated object (e.g., Contact, Lead, etc) or Other if this Attendee is not associated with a CRM object
	AssociatedObjectType string                    `json:"associatedObjectType"`
	Associations         EventAttendeeAssociations `json:"associations"`
	// The date that the event attendee was created
	CreatedTime time.Time `json:"createdTime"`
	// Optional unless `associationId` is null
	Email *string `json:"email,omitempty"`
	ID    string  `json:"id"`
	// The date the event attendee was last modified
	ModifiedTime time.Time `json:"modifiedTime"`
	// Id in the downstream CRM
	NativeID string  `json:"nativeId"`
	Status   *string `json:"status,omitempty"`
}
